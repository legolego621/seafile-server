# Default values for seafile.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# Define stratagy
strategyUpdate:
  type: Recreate

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: seafileltd/seafile-mc
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the startup and readiness and liveness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
startupProbe:
  httpGet:
    path: /api2/ping/
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 2
  successThreshold: 1
  failureThreshold: 30

readinessProbe:
  httpGet:
    path: /api2/ping/
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 2
  successThreshold: 2
  failureThreshold: 15

livenessProbe:
  httpGet:
    path: /api2/ping/
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 2
  successThreshold: 1
  failureThreshold: 2
    

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: false
  annotations: {}
  ## Name of an existing `PersistentVolumeClaim` for seafile data
  ## NOTE: When it's set the rest of persistence parameters are ignored
  ##
  existingClaim: ""
  ## @param primary.persistence.subPath The name of a volume's sub path to mount for persistence
  ##
  subPath: ""
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 8Gi

# Configuration for seafile
## see for detail
## https://manual.seafile.com/12.0/setup/k8s_single_node/#gettings-started
env:
  - name: SEAFILE_LOG_TO_STDOUT
    value: "true"
  - name: SEAFILE_SERVER_HOSTNAME
    value: seafile.example.com
  - name: SEAFILE_SERVER_PROTOCOL
    value: http
  - name: TIME_ZONE
    value: UTC
  - name: SEAFILE_LOG_TO_STDOUT
    value: "true"
  - name: SITE_ROOT
    value: "/"
  - name: DB_HOST
    value: localhost
  - name: DB_PORT
    value: "3306"
  - name: DB_USER
    value: seafile
  - name: DB_PASSWORD
    value: ""
  - name: DB_ROOT_PASSWD
    value: ""
    ## gen with `pwgen -s 40 1`
  - name: JWT_PRIVATE_KEY
    value: ""
  - name: INIT_SEAFILE_ADMIN_EMAIL
    value: ""
  - name: INIT_SEAFILE_ADMIN_PASSWORD
    value: ""
  ## optional
  - name: ENABLE_SEADOC
    value: "false"
  - name: SEADOC_SERVER_URL
    value: https://seafile.example.com/sdoc-server
  - name: SEAFILE_MYSQL_DB_CCNET_DB_NAME
    value: ccnet_db
  - name: SEAFILE_MYSQL_DB_SEAFILE_DB_NAME
    value: seafile_db
  - name: SEAFILE_MYSQL_DB_SEAHUB_DB_NAME
    value: seahub_db

configSecrets:
  annotations: {}
  labels: {}
  files:
    gunicorn.conf.py:
      content: ""
      mode: ""
    seafdav.conf:
      content: ""
      mode: ""
    seafevents.conf:
      content: ""
      mode: ""
    seafile.conf:
      content: ""
      mode: ""
    seahub_settings.py:
      content: ""
      mode: ""



mariadb:
  enabled: true
  architecture: standalone
  auth:
    rootPassword: seafileRoot
    database: seafile
    username: seafile
    password: seafile
    existingSecret: ""
  primary:
    resources: {}
    persistence:
      enabled: true
      storageClass: ""
      size: 5Gi
    pdb:
      create: true
      minAvailable: 1
  serviceAccount:
    create: true
  metrics:
    enabled: false
    resources: {}
    serviceMonitor:
      enabled: false
      interval: 30s

memcached:
  enabled: true
  auth:
    enabled: false
  replicaCount: 1
  resources: {}
  podAntiAffinityPreset: hard
  pdb:
    create: true
    minAvailable: 1
  persistence:
    enabled: true
    storageClass: ""
    size: 2Gi
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false